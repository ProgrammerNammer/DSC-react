{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\markgabriel\\\\Repositories\\\\DSC-react\\\\src\\\\components\\\\NavigationItem\\\\NavigationItem.js\";\nimport React from \"react\";\nimport \"./NavigationItem.css\";\n\nclass NavigationItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hoveredOn: false,\n      stickyNavigationState: false\n    };\n\n    this.toggleHover = () => {\n      this.setState({\n        hoveredOn: !this.state.hoveredOn\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.stickyNavigationState !== this.props.stickyNavigationState) {\n      if (!this.stickyNavigationState) {\n        this.setState({\n          stickyNavigationState: true\n        });\n      }\n    }\n  }\n\n  render() {\n    var style;\n    console.log(this.props.itemName + \" \" + this.state.stickyNavigationState);\n\n    if (this.state.hoveredOn && this.state.stickyNavigationState) {\n      style = {\n        color: \"white\",\n        backgroundColor: this.props.itemHoverColor\n      };\n    } else if (!this.state.hoveredOn && this.state.stickyNavigationState) {\n      style = {\n        color: this.props.itemHoverColor\n      };\n    } else if (this.state.hoveredOn && !this.state.stickyNavigationState) {\n      style = {\n        color: \"white\",\n        backgroundColor: this.props.itemHoverColor\n      };\n    } else {\n      style = {\n        color: \"white\"\n      };\n    } // if (this.state.hoveredOn) {\n    //   if (this.state.stickyNavigationState) {\n    //     style = {\n    //       color: \"white\",\n    //       backgroundColor: this.props.itemHoverColor,\n    //     };\n    //   } else {\n    //     style = {\n    //       color: \"white\",\n    //       backgroundColor: this.props.itemHoverColor,\n    //     };\n    //   }\n    // } else {\n    //   if (this.state.stickyNavigationState) {\n    //     style = {\n    //       color: this.props.itemHoverColor,\n    //     };\n    //   } else {\n    //     style = {\n    //       color: \"white\",\n    //     };\n    //   }\n    // }\n\n\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: this.props.source,\n      style: style,\n      onMouseEnter: this.toggleHover,\n      onMouseLeave: this.toggleHover,\n      children: this.props.itemName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nNavigationItem.defaultProps = {\n  itemHoverColor: \"Blue\",\n  itemName: \"Input Item Name\",\n  source: \"#\"\n};\nexport default NavigationItem;","map":{"version":3,"sources":["C:/Users/markgabriel/Repositories/DSC-react/src/components/NavigationItem/NavigationItem.js"],"names":["React","NavigationItem","Component","state","hoveredOn","stickyNavigationState","toggleHover","setState","componentDidUpdate","prevProps","props","render","style","console","log","itemName","color","backgroundColor","itemHoverColor","source","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AAAEC,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,qBAAqB,EAAE;AAA3C,KADmC;;AAAA,SAG3CC,WAH2C,GAG7B,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAzB,OAAd;AACD,KAL0C;AAAA;;AAO3CI,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACJ,qBAAV,KAAoC,KAAKK,KAAL,CAAWL,qBAAnD,EAA0E;AACxE,UAAI,CAAC,KAAKA,qBAAV,EAAiC;AAC/B,aAAKE,QAAL,CAAc;AACZF,UAAAA,qBAAqB,EAAE;AADX,SAAd;AAGD;AACF;AACF;;AAEDM,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAJ;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,QAAX,GAAsB,GAAtB,GAA4B,KAAKZ,KAAL,CAAWE,qBAAnD;;AAEA,QAAI,KAAKF,KAAL,CAAWC,SAAX,IAAwB,KAAKD,KAAL,CAAWE,qBAAvC,EAA8D;AAC5DO,MAAAA,KAAK,GAAG;AACNI,QAAAA,KAAK,EAAE,OADD;AAENC,QAAAA,eAAe,EAAE,KAAKP,KAAL,CAAWQ;AAFtB,OAAR;AAID,KALD,MAKO,IAAI,CAAC,KAAKf,KAAL,CAAWC,SAAZ,IAAyB,KAAKD,KAAL,CAAWE,qBAAxC,EAA+D;AACpEO,MAAAA,KAAK,GAAG;AACNI,QAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWQ;AADZ,OAAR;AAGD,KAJM,MAIA,IAAI,KAAKf,KAAL,CAAWC,SAAX,IAAwB,CAAC,KAAKD,KAAL,CAAWE,qBAAxC,EAA+D;AACpEO,MAAAA,KAAK,GAAG;AACNI,QAAAA,KAAK,EAAE,OADD;AAENC,QAAAA,eAAe,EAAE,KAAKP,KAAL,CAAWQ;AAFtB,OAAR;AAID,KALM,MAKA;AACLN,MAAAA,KAAK,GAAG;AACNI,QAAAA,KAAK,EAAE;AADD,OAAR;AAGD,KAvBM,CAyBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,wBACE;AACE,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWS,MADnB;AAEE,MAAA,KAAK,EAAEP,KAFT;AAGE,MAAA,YAAY,EAAE,KAAKN,WAHrB;AAIE,MAAA,YAAY,EAAE,KAAKA,WAJrB;AAAA,gBAMG,KAAKI,KAAL,CAAWK;AANd;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA5E0C;;AA+E7Cd,cAAc,CAACmB,YAAf,GAA8B;AAC5BF,EAAAA,cAAc,EAAE,MADY;AAE5BH,EAAAA,QAAQ,EAAE,iBAFkB;AAG5BI,EAAAA,MAAM,EAAE;AAHoB,CAA9B;AAMA,eAAelB,cAAf","sourcesContent":["import React from \"react\";\r\nimport \"./NavigationItem.css\";\r\n\r\nclass NavigationItem extends React.Component {\r\n  state = { hoveredOn: false, stickyNavigationState: false };\r\n\r\n  toggleHover = () => {\r\n    this.setState({ hoveredOn: !this.state.hoveredOn });\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.stickyNavigationState !== this.props.stickyNavigationState) {\r\n      if (!this.stickyNavigationState) {\r\n        this.setState({\r\n          stickyNavigationState: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var style;\r\n\r\n    console.log(this.props.itemName + \" \" + this.state.stickyNavigationState);\r\n\r\n    if (this.state.hoveredOn && this.state.stickyNavigationState) {\r\n      style = {\r\n        color: \"white\",\r\n        backgroundColor: this.props.itemHoverColor,\r\n      };\r\n    } else if (!this.state.hoveredOn && this.state.stickyNavigationState) {\r\n      style = {\r\n        color: this.props.itemHoverColor,\r\n      };\r\n    } else if (this.state.hoveredOn && !this.state.stickyNavigationState) {\r\n      style = {\r\n        color: \"white\",\r\n        backgroundColor: this.props.itemHoverColor,\r\n      };\r\n    } else {\r\n      style = {\r\n        color: \"white\",\r\n      };\r\n    }\r\n\r\n    // if (this.state.hoveredOn) {\r\n    //   if (this.state.stickyNavigationState) {\r\n    //     style = {\r\n    //       color: \"white\",\r\n    //       backgroundColor: this.props.itemHoverColor,\r\n    //     };\r\n    //   } else {\r\n    //     style = {\r\n    //       color: \"white\",\r\n    //       backgroundColor: this.props.itemHoverColor,\r\n    //     };\r\n    //   }\r\n    // } else {\r\n    //   if (this.state.stickyNavigationState) {\r\n    //     style = {\r\n    //       color: this.props.itemHoverColor,\r\n    //     };\r\n    //   } else {\r\n    //     style = {\r\n    //       color: \"white\",\r\n    //     };\r\n    //   }\r\n    // }\r\n\r\n    return (\r\n      <a\r\n        href={this.props.source}\r\n        style={style}\r\n        onMouseEnter={this.toggleHover}\r\n        onMouseLeave={this.toggleHover}\r\n      >\r\n        {this.props.itemName}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationItem.defaultProps = {\r\n  itemHoverColor: \"Blue\",\r\n  itemName: \"Input Item Name\",\r\n  source: \"#\",\r\n};\r\n\r\nexport default NavigationItem;\r\n"]},"metadata":{},"sourceType":"module"}