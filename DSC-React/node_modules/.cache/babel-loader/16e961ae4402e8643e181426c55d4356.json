{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\markgabriel\\\\Repositories\\\\DSC-react\\\\src\\\\components\\\\Navigation\\\\Navigation.js\";\nimport React from \"react\";\nimport NavigationItem from \"../NavigationItem/NavigationItem\";\nimport GDGLogo from \"../../assets/images/DSC-logo.png\";\nimport \"./Navigation.css\"; //  Instantiate the NavigationItems here\n\nconst navigationItems = [{\n  itemName: \"Become A Member\",\n  itemHoverColor: \"#4285f4\"\n}, {\n  itemName: \"How It Works\",\n  itemHoverColor: \"#ea4335\"\n}, {\n  itemName: \"Organizational Events\",\n  itemHoverColor: \"#fbbc05\"\n}, {\n  itemName: \"Our Social Hubs\",\n  itemHoverColor: \"#34a853\"\n}];\n\nclass Navigation extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.listener = null;\n    this.state = {\n      stickyNavigation: false\n    };\n\n    this.toggleStickyNavigation = () => {\n      //  TODO Removing sticky should only be when navigation is near default part\n      if (window.pageYOffset > 600) {\n        if (!this.state.stickyNavigation) {\n          this.setState({\n            stickyNavigation: true\n          });\n        }\n      } else {\n        if (this.state.stickyNavigation) {\n          this.setState({\n            stickyNavigation: false\n          });\n        }\n      }\n    };\n\n    this.renderNavigationState = () => {\n      if (this.state.stickyNavigation) {\n        return \"navigation--sticky\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.toggleStickyNavigation);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\");\n  }\n\n  render() {\n    const renderNavigationItems = navigationItems.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-item\",\n        children: /*#__PURE__*/_jsxDEV(NavigationItem, {\n          itemName: item.itemName,\n          itemHoverColor: item.itemHoverColor,\n          stickyNavigationState: this.state.stickyNavigation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: this.renderNavigationState(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"DLSU GDG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: GDGLogo,\n          alt: \"DSC-Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-list\",\n        children: renderNavigationItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Navigation;","map":{"version":3,"sources":["C:/Users/markgabriel/Repositories/DSC-react/src/components/Navigation/Navigation.js"],"names":["React","NavigationItem","GDGLogo","navigationItems","itemName","itemHoverColor","Navigation","Component","listener","state","stickyNavigation","toggleStickyNavigation","window","pageYOffset","setState","renderNavigationState","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","renderNavigationItems","map","item"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAO,kBAAP,C,CAEA;;AACA,MAAMC,eAAe,GAAG,CACtB;AACEC,EAAAA,QAAQ,EAAE,iBADZ;AAEEC,EAAAA,cAAc,EAAE;AAFlB,CADsB,EAKtB;AACED,EAAAA,QAAQ,EAAE,cADZ;AAEEC,EAAAA,cAAc,EAAE;AAFlB,CALsB,EAStB;AACED,EAAAA,QAAQ,EAAE,uBADZ;AAEEC,EAAAA,cAAc,EAAE;AAFlB,CATsB,EAatB;AACED,EAAAA,QAAQ,EAAE,iBADZ;AAEEC,EAAAA,cAAc,EAAE;AAFlB,CAbsB,CAAxB;;AAmBA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,QADuC,GAC5B,IAD4B;AAAA,SAEvCC,KAFuC,GAE/B;AACNC,MAAAA,gBAAgB,EAAE;AADZ,KAF+B;;AAAA,SAcvCC,sBAduC,GAcd,MAAM;AAC7B;AACA,UAAIC,MAAM,CAACC,WAAP,GAAqB,GAAzB,EAA8B;AAC5B,YAAI,CAAC,KAAKJ,KAAL,CAAWC,gBAAhB,EAAkC;AAChC,eAAKI,QAAL,CAAc;AAAEJ,YAAAA,gBAAgB,EAAE;AAApB,WAAd;AACD;AACF,OAJD,MAIO;AACL,YAAI,KAAKD,KAAL,CAAWC,gBAAf,EAAiC;AAC/B,eAAKI,QAAL,CAAc;AAAEJ,YAAAA,gBAAgB,EAAE;AAApB,WAAd;AACD;AACF;AACF,KAzBsC;;AAAA,SA2BvCK,qBA3BuC,GA2Bf,MAAM;AAC5B,UAAI,KAAKN,KAAL,CAAWC,gBAAf,EAAiC;AAC/B,eAAO,oBAAP;AACD;AACF,KA/BsC;AAAA;;AAMvCM,EAAAA,iBAAiB,GAAG;AAClBJ,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkC,KAAKN,sBAAvC;AACD;;AAEDO,EAAAA,oBAAoB,GAAG;AACrBN,IAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B;AACD;;AAqBDC,EAAAA,MAAM,GAAG;AACP,UAAMC,qBAAqB,GAAGlB,eAAe,CAACmB,GAAhB,CAAqBC,IAAD,IAAU;AAC1D,0BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,QAAQ,EAAEA,IAAI,CAACnB,QADjB;AAEE,UAAA,cAAc,EAAEmB,IAAI,CAAClB,cAFvB;AAGE,UAAA,qBAAqB,EAAE,KAAKI,KAAL,CAAWC;AAHpC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAV6B,CAA9B;AAYA,wBACE;AAAK,MAAA,SAAS,EAAE,KAAKK,qBAAL,EAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,GAAG,EAAEb,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBAAkCmB;AAAlC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAvDsC;;AA0DzC,eAAef,UAAf","sourcesContent":["import React from \"react\";\r\nimport NavigationItem from \"../NavigationItem/NavigationItem\";\r\nimport GDGLogo from \"../../assets/images/DSC-logo.png\";\r\nimport \"./Navigation.css\";\r\n\r\n//  Instantiate the NavigationItems here\r\nconst navigationItems = [\r\n  {\r\n    itemName: \"Become A Member\",\r\n    itemHoverColor: \"#4285f4\",\r\n  },\r\n  {\r\n    itemName: \"How It Works\",\r\n    itemHoverColor: \"#ea4335\",\r\n  },\r\n  {\r\n    itemName: \"Organizational Events\",\r\n    itemHoverColor: \"#fbbc05\",\r\n  },\r\n  {\r\n    itemName: \"Our Social Hubs\",\r\n    itemHoverColor: \"#34a853\",\r\n  },\r\n];\r\n\r\nclass Navigation extends React.Component {\r\n  listener = null;\r\n  state = {\r\n    stickyNavigation: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.toggleStickyNavigation);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\");\r\n  }\r\n\r\n  toggleStickyNavigation = () => {\r\n    //  TODO Removing sticky should only be when navigation is near default part\r\n    if (window.pageYOffset > 600) {\r\n      if (!this.state.stickyNavigation) {\r\n        this.setState({ stickyNavigation: true });\r\n      }\r\n    } else {\r\n      if (this.state.stickyNavigation) {\r\n        this.setState({ stickyNavigation: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  renderNavigationState = () => {\r\n    if (this.state.stickyNavigation) {\r\n      return \"navigation--sticky\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const renderNavigationItems = navigationItems.map((item) => {\r\n      return (\r\n        <div className=\"navigation-item\">\r\n          <NavigationItem\r\n            itemName={item.itemName}\r\n            itemHoverColor={item.itemHoverColor}\r\n            stickyNavigationState={this.state.stickyNavigation}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <nav className={this.renderNavigationState()}>\r\n        <div className=\"navigation-logo\">\r\n          <span>DLSU GDG</span>\r\n          <img src={GDGLogo} alt=\"DSC-Logo\" />\r\n        </div>\r\n        <div className=\"navigation-list\">{renderNavigationItems}</div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}